<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="0" passed="0" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-04T07:42:03Z" name="Suite1" finished-at="2022-08-04T07:42:03Z" duration-ms="92">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runnerPac.MyRunnerClass@55dfebeb]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-08-04T07:42:03Z" name="Nopackage" finished-at="2022-08-04T07:42:03Z" duration-ms="92">
      <class name="runnerPac.MyRunnerClass">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runnerPac.MyRunnerClass@55dfebeb]" started-at="2022-08-04T07:42:03Z" name="setUpClass" finished-at="2022-08-04T07:42:03Z" duration-ms="67" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@abf688e]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[The glue path contained invalid identifiers ./stepDefinition]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: The glue path contained invalid identifiers ./stepDefinition
at io.cucumber.core.feature.GluePath.parseAssumeClasspathScheme(GluePath.java:87)
at io.cucumber.core.feature.GluePath.parse(GluePath.java:68)
at io.cucumber.core.options.CucumberOptionsAnnotationParser.addGlue(CucumberOptionsAnnotationParser.java:127)
at io.cucumber.core.options.CucumberOptionsAnnotationParser.parse(CucumberOptionsAnnotationParser.java:45)
at io.cucumber.testng.TestNGCucumberRunner.<init>(TestNGCucumberRunner.java:85)
at io.cucumber.testng.AbstractTestNGCucumberTests.setUpClass(AbstractTestNGCucumberTests.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:168)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:105)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runnerPac.MyRunnerClass@55dfebeb]" started-at="2022-08-04T07:42:03Z" name="tearDownClass" finished-at="2022-08-04T07:42:03Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runnerPac.MyRunnerClass -->
    </test> <!-- Nopackage -->
  </suite> <!-- Suite1 -->
</testng-results>
